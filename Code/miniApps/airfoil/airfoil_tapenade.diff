!!! The following diff illustrates the changes made to the 
!!! original makefile.
diff --git a/Makefile b/Makefile
index 65af007..e01f297 100644
--- a/Makefile
+++ b/Makefile
@@ -27,12 +27,14 @@ LFLAGS   = -Vaxlib -lm -static-libcxa
 FC = gfortran
 CC = gcc

!!! Flags have been set to generate debug symbols and to compile
!!! with no optimization
-FFLAGS   = 
-FFLAGS2  = -DCOMPLEX
-CFLAGS   =
-CPPFLAGS = 
+FFLAGS   = -O0
+FFLAGS2  = -DCOMPLEX 
+CFLAGS   = -g
+CPPFLAGS = -g
 LFLAGS   = -lm -static-libgcc

!!! The OpenAD/F runtime support files were added to be able
!!! to compile print_active.f which is used to pretty print
!!! vectors and matrices.
+RTSUPP  =	w2f__types OAD_active
+
 TARGETS =  airfoil air_lin air_adj testlinadj
 
 #
@@ -46,21 +48,38 @@ TARGETS =  airfoil air_lin air_adj testlinadj
 # program dependencies
 #
!!! Order of binaries have been changed to comply with order 
!!! in which they are needed 
-AIRFOIL = airfoil.o input.o routines.o
+AIRFOIL = input.o routines.o airfoil.o 

!!! Tapenade was not available locally, the differentiated files
!!! were generated by passing the undifferentiated routines to
!!! Tapenade on the web and are included here along with the binaries
!!! that need to be built.
!!! OpenAD/F runtime support files have been added to be able to 
!!! compile print_active.F which pretty prints double precision
!!! arrays and vectors and does the same for OpenAD/F active types
!!! This was used in debugging.
-AIR_LIN = air_lin.o input.o \
+AIR_LIN = input.o \
           flux_face_d.o  flux_wall_d.o  time_cell_d.o  lift_wall_d.o \
-          flux_face_dx.o flux_wall_dx.o time_cell_dx.o lift_wall_dx.o
+          flux_face_dx.o flux_wall_dx.o time_cell_dx.o lift_wall_dx.o \
+	  $(addsuffix .o, $(RTSUPP))\
+	  print_active.o \
+	  air_lin.o 
 
-AIR_ADJ = air_adj.o input.o routines.o adStack.o \
+AIR_ADJ = input.o routines.o \
           flux_face_b.o  flux_wall_b.o  time_cell_b.o  lift_wall_b.o \
-          flux_face_bx.o flux_wall_bx.o time_cell_bx.o lift_wall_bx.o
+          flux_face_bx.o flux_wall_bx.o time_cell_bx.o lift_wall_bx.o \
+          adStack.o adBuffer.o print_active.o air_adj.o 
 
-TESTLINADJ = testlinadj.o routines.o Croutines.o adStack.o \
+TESTLINADJ =  routines.o Croutines.o \
           flux_face_d.o  flux_wall_d.o  time_cell_d.o  lift_wall_d.o \
           flux_face_b.o  flux_wall_b.o  time_cell_b.o  lift_wall_b.o \
           flux_face_dx.o flux_wall_dx.o time_cell_dx.o lift_wall_dx.o \
-          flux_face_bx.o flux_wall_bx.o time_cell_bx.o lift_wall_bx.o
+          flux_face_bx.o flux_wall_bx.o time_cell_bx.o lift_wall_bx.o \
+          adStack.o adBuffer.o testlinadj.o
+
+%.o : %.F
+	${FC} ${FFLAGS} -o $@ -c $<
+
+%.o : %.f90
+	${FC} ${F90FLAGS} -o $@ -c $< 
+
+%.o : %.f
+	${FC} ${F90FLAGS} -o $@ -c $< 
+
+%.o : %.c
+	${CC} -o $@ -c $< 
 
 #
 # programs
@@ -93,18 +112,18 @@ Croutines.o:	                                   routines.F
!!! Call to Tapenade has been commented out in the following
!!! make command. So also the command to remove the differentiated
!!! files.
 time_cell_d.o:	routines.F
 		${CC} -E -C -P routines.F > routines.f;
-		${TPN} -forward              \
+#		${TPN} -forward              \
 		       -head       time_cell \
 		       -output     time_cell \
 		       -vars       "q"       \
 		       -outvars    "q adt"   \
 		        routines.f;
 		${FC} ${FFLAGS} -c time_cell_d.f;
-	/bin/rm routines.f time_cell_d.f *.msg
+#	    /bin/rm routines.f time_cell_d.f *.msg
!!! Call to Tapenade has been commented out in the following
!!! make command. So also the command to remove the differentiated
!!! files. 
 time_cell_dx.o:	routines.F
 		${CC} -E -C -P routines.F > routines.f;
-		${TPN} -forward                          \
+#		${TPN} -forward                          \
 		       -head         time_cell           \
 		       -output       time_cell           \
 		       -vars         "x1 x2 x3 x4 q"     \
@@ -112,22 +131,22 @@ time_cell_dx.o:	routines.F
 		       -difffuncname "_dx"               \
 		        routines.f;
 		${FC} ${FFLAGS} -c time_cell_dx.f;
-		/bin/rm routines.f time_cell_dx.f *.msg
+#		/bin/rm routines.f time_cell_dx.f *.msg
!!! Call to Tapenade has been commented out in the following
!!! make command. So also the command to remove the differentiated
!!! files.  
 flux_face_d.o:	routines.F
 		${CC} -E -C -P routines.F > routines.f;
-		${TPN} -forward                                \
+#		${TPN} -forward                                \
 		       -head       flux_face                   \
 		       -output     flux_face                   \
 		       -vars       "q1 q2 adt1 adt2 res1 res2" \
 		       -outvars    "q1 q2 adt1 adt2 res1 res2" \
 		        routines.f;
 		${FC} ${FFLAGS} -c flux_face_d.f;
-		/bin/rm routines.f flux_face_d.f *.msg
+#		/bin/rm routines.f flux_face_d.f *.msg
!!! Call to Tapenade has been commented out in the following
!!! make command. So also the command to remove the differentiated
!!! files.  
 flux_face_dx.o:	routines.F
 		${CC} -E -C -P routines.F > routines.f;
-		${TPN} -forward                                        \
+#		${TPN} -forward                                        \
 		       -head         flux_face                         \
 		       -output       flux_face                         \
 		       -vars         "x1 x2 q1 q2 adt1 adt2 res1 res2" \
@@ -135,22 +154,22 @@ flux_face_dx.o:	routines.F
 		       -difffuncname "_dx"                             \
 		        routines.f;
 		${FC} ${FFLAGS} -c flux_face_dx.f;
-		/bin/rm routines.f flux_face_dx.f *.msg
+#		/bin/rm routines.f flux_face_dx.f *.msg
!!! Call to Tapenade has been commented out in the following
!!! make command. So also the command to remove the differentiated
!!! files.  
 flux_wall_d.o:	routines.F
 		${CC} -E -C -P routines.F > routines.f;
-		${TPN} -forward              \
+#		${TPN} -forward              \
 		       -head       flux_wall \
 		       -output     flux_wall \
 		       -vars       "q res"   \
 		       -outvars    "q res"   \
 		        routines.f;
 		${FC} ${FFLAGS} -c flux_wall_d.f;
-		/bin/rm routines.f flux_wall_d.f *.msg
+#		/bin/rm routines.f flux_wall_d.f *.msg
!!! Call to Tapenade has been commented out in the following
!!! make command. So also the command to remove the differentiated
!!! files.  
 flux_wall_dx.o:	routines.F
 		${CC} -E -C -P routines.F > routines.f;
-		${TPN} -forward                    \
+#		${TPN} -forward                    \
 		       -vars         "x1 x2 q res" \
 		       -outvars      "x1 x2 q res" \
 		       -head         flux_wall     \
@@ -158,22 +177,22 @@ flux_wall_dx.o:	routines.F
 		       -difffuncname "_dx"         \
 		        routines.f;
 		${FC} ${FFLAGS} -c flux_wall_dx.f;
-		/bin/rm routines.f flux_wall_dx.f *.msg
+#		/bin/rm routines.f flux_wall_dx.f *.msg
!!! Call to Tapenade has been commented out in the following
!!! make command. So also the command to remove the differentiated
!!! files.  
 lift_wall_d.o:	routines.F
 		${CC} -E -C -P routines.F > routines.f;
-		${TPN} -forward              \
+#		${TPN} -forward              \
 		       -head       lift_wall \
 		       -output     lift_wall \
 		       -vars       "q lift"  \
 		       -outvars    "q lift"  \
 		        routines.f;
 		${FC} ${FFLAGS} -c lift_wall_d.f;
-		/bin/rm routines.f lift_wall_d.f *.msg
+#		/bin/rm routines.f lift_wall_d.f *.msg
!!! Call to Tapenade has been commented out in the following
!!! make command. So also the command to remove the differentiated
!!! files.  
 lift_wall_dx.o:	routines.F
 		${CC} -E -C -P routines.F > routines.f;
-		${TPN} -forward                     \
+#		${TPN} -forward                     \
 		       -head         lift_wall      \
 		       -output       lift_wall      \
 		       -vars         "x1 x2 q lift" \
@@ -181,7 +200,7 @@ lift_wall_dx.o:	routines.F
 		       -difffuncname "_dx"          \
 		        routines.f;
 		${FC} ${FFLAGS} -c lift_wall_dx.f;
-		/bin/rm routines.f lift_wall_dx.f *.msg
+#		/bin/rm routines.f lift_wall_dx.f *.msg
 
 #
 # Adjoint versions of nonlinear routines
@@ -189,18 +208,18 @@ lift_wall_dx.o:	routines.F
!!! Call to Tapenade has been commented out in the following
!!! make command. So also the command to remove the differentiated
!!! files.  
 time_cell_b.o:	routines.F
 		${CC} -E -C -P routines.F > routines.f;
-		${TPN} -backward             \
+#		${TPN} -backward             \
 		       -head       time_cell \
 		       -output     time_cell \
 		       -vars       "q"       \
 		       -outvars    "q adt"   \
 		        routines.f;
 		${FC} ${FFLAGS} -c time_cell_b.f;
-		/bin/rm routines.f time_cell_b.f *.msg
+#		/bin/rm routines.f time_cell_b.f *.msg
!!! Call to Tapenade has been commented out in the following
!!! make command. So also the command to remove the differentiated
!!! files.  
 time_cell_bx.o:	routines.F
 		${CC} -E -C -P routines.F > routines.f;
-		${TPN} -backward                         \
+#		${TPN} -backward                         \
 		       -head         time_cell           \
 		       -output       time_cell           \
 		       -vars         "x1 x2 x3 x4 q"     \
@@ -208,22 +227,22 @@ time_cell_bx.o:	routines.F
 		       -difffuncname "_bx"               \
 		        routines.f;
 		${FC} ${FFLAGS} -c time_cell_bx.f;
-		/bin/rm routines.f time_cell_bx.f *.msg
+#		/bin/rm routines.f time_cell_bx.f *.msg
!!! Call to Tapenade has been commented out in the following
!!! make command. So also the command to remove the differentiated
!!! files.  
 flux_face_b.o:	routines.F
 		${CC} -E -C -P routines.F > routines.f;
-		${TPN} -backward                               \
+#		${TPN} -backward                               \
 		       -head       flux_face                   \
 		       -output     flux_face                   \
 		       -vars       "q1 q2 adt1 adt2 res1 res2" \
 		       -outvars    "q1 q2 adt1 adt2 res1 res2" \
 		        routines.f;
 		${FC} ${FFLAGS} -c flux_face_b.f;
-		/bin/rm routines.f flux_face_b.f *.msg
+#		/bin/rm routines.f flux_face_b.f *.msg
!!! Call to Tapenade has been commented out in the following
!!! make command. So also the command to remove the differentiated
!!! files.  
 flux_face_bx.o:	routines.F
 		${CC} -E -C -P routines.F > routines.f;
-		${TPN} -backward                                       \
+#		${TPN} -backward                                       \
 		       -head         flux_face                         \
 		       -output       flux_face                         \
 		       -vars         "x1 x2 q1 q2 adt1 adt2 res1 res2" \
@@ -231,22 +250,22 @@ flux_face_bx.o:	routines.F
 		       -difffuncname "_bx"                             \
 		        routines.f;
 		${FC} ${FFLAGS} -c flux_face_bx.f;
-		/bin/rm routines.f flux_face_bx.f *.msg
+#		/bin/rm routines.f flux_face_bx.f *.msg
!!! Call to Tapenade has been commented out in the following
!!! make command. So also the command to remove the differentiated
!!! files.  
 flux_wall_b.o:	routines.F
 		${CC} -E -C -P routines.F > routines.f;
-		${TPN} -backward             \
+#		${TPN} -backward             \
 		       -head       flux_wall \
 		       -output     flux_wall \
 		       -vars       "q res"   \
 		       -outvars    "q res"   \
 		        routines.f;
 		${FC} ${FFLAGS} -c flux_wall_b.f;
-		/bin/rm routines.f flux_wall_b.f *.msg
+#		/bin/rm routines.f flux_wall_b.f *.msg
!!! Call to Tapenade has been commented out in the following
!!! make command. So also the command to remove the differentiated
!!! files.  
 flux_wall_bx.o:	routines.F
 		${CC} -E -C -P routines.F > routines.f;
-		${TPN} -backward                   \
+#		${TPN} -backward                   \
 		       -head         flux_wall     \
 		       -output       flux_wall     \
 		       -vars         "x1 x2 q res" \
@@ -254,22 +273,22 @@ flux_wall_bx.o:	routines.F
 		       -difffuncname "_bx"         \
 		        routines.f;
 		${FC} ${FFLAGS} -c flux_wall_bx.f;
-		/bin/rm routines.f flux_wall_bx.f *.msg
+#		/bin/rm routines.f flux_wall_bx.f *.msg
!!! Call to Tapenade has been commented out in the following
!!! make command. So also the command to remove the differentiated
!!! files.  
 lift_wall_b.o:	routines.F
 		${CC} -E -C -P routines.F > routines.f;
-		${TPN} -backward             \
+#		${TPN} -backward             \
 		       -head       lift_wall \
 		       -output     lift_wall \
 		       -vars       "q lift"  \
 		       -outvars    "q lift"  \
 		        routines.f;
 		${FC} ${FFLAGS} -c lift_wall_b.f;
-		/bin/rm routines.f lift_wall_b.f *.msg
+#		/bin/rm routines.f lift_wall_b.f *.msg
!!! Call to Tapenade has been commented out in the following
!!! make command. So also the command to remove the differentiated
!!! files.  
 lift_wall_bx.o:	routines.F
 		${CC} -E -C -P routines.F > routines.f;
-		${TPN} -backward                    \
+#		${TPN} -backward                    \
 		       -head         lift_wall      \
 		       -output       lift_wall      \
 		       -vars         "x1 x2 q lift" \
@@ -277,22 +296,22 @@ lift_wall_bx.o:	routines.F
 		       -difffuncname "_bx"          \
 		        routines.f;
 		${FC} ${FFLAGS} -c lift_wall_bx.f;
-		/bin/rm routines.f lift_wall_bx.f *.msg
+#		/bin/rm routines.f lift_wall_bx.f *.msg
 
 #
 # clean things up
 #
 
 clean:	
-	/bin/rm -f *.o *.cpp *.f *.msg
+	/bin/rm -f *.o *.cpp *.msg *.mod routines.f
 
-realclean:	
-	/bin/rm -f *.o *.cpp *.f *.msg $(TARGETS)
+realclean: clean	
+	/bin/rm -f $(TARGETS)
 
 #
 # create tar file
 #
 
 tar:	
-	tar cvf airfoil.tar README *.F *.c *.inc Makefile *.dat
+	tar cvf airfoil.tar README *.F *.f *.c *.inc Makefile *.dat
!!! The following diffs are for files that never existed in the 
!!! initial commit of airfoil. All of them are Tapenade support 
!!! files with the exception of OAD_active.f90 which is an OpenAD/F
!!! support file.
diff --git a/OAD_active.f90 b/OAD_active.f90
new file mode 100644
index 0000000..1117df7
--- /dev/null
+++ b/OAD_active.f90
diff --git a/adBuffer.c b/adBuffer.c
new file mode 100644
index 0000000..82df86b
--- /dev/null
+++ b/adBuffer.c
diff --git a/adBuffer.f b/adBuffer.f
new file mode 100644
index 0000000..3f1996c
--- /dev/null
+++ b/adBuffer.f
diff --git a/adBuffer.h b/adBuffer.h
new file mode 100644
index 0000000..63aeaf5
--- /dev/null
+++ b/adBuffer.h
diff --git a/adStack.c b/adStack.c
index 85f98a5..c4a5204 100644
--- a/adStack.c
+++ b/adStack.c
diff --git a/adStack.h b/adStack.h
new file mode 100644
index 0000000..660ebca
--- /dev/null
+++ b/adStack.h
diff --git a/air_adj.F b/air_adj.F
index f9b1062..d4a0f57 100644
--- a/air_adj.F
+++ b/air_adj.F
@@ -16,7 +16,7 @@ c
 #include "const.inc"
 c
         integer    maxnode,     maxcell,       maxedge
-        parameter (maxnode=9900,maxcell=9702+1,maxedge=19502)
+        parameter (maxnode=721801,maxcell=720000+1,maxedge=1441400)
 c
         integer*4 ecell(2,maxedge), boun(maxedge),
      &            edge(2,maxedge), cell(4,maxcell)
@@ -105,7 +105,7 @@ c
               resbold(ipde,ic) = resb(ipde,ic)
             enddo
           enddo
-c 
+c
 c-------- predictor/corrector update loop
 c
           do k = 1, 2
@@ -115,8 +115,8 @@ c
               enddo
               adtb(ic) = 0.0d0
             enddo
-c 
-c---------- flux evaluation loop 
+c
+c---------- flux evaluation loop
 c
 c            write(*,*) 'entering flux_fac_b/flux_wall_b'
 c
@@ -129,7 +129,7 @@ c
               if(boun(ie).eq.0) then
                 call flux_face_b(x(1,in1),x(1,in2),
      &                           q(1,ic1),qb(1,ic1),
-     &                           q(1,ic2),qb(1,ic2), 
+     &                           q(1,ic2),qb(1,ic2),
      &                           adt(ic1),adtb(ic1),
      &                           adt(ic2),adtb(ic2),
      &                           dum1,resb(1,ic1), dum2,resb(1,ic2))
@@ -190,7 +190,7 @@ c
                 call flux_face_bx(x(1,in1),xb(1,in1),
      &                            x(1,in2),xb(1,in2),
      &                            q(1,ic1),qb(1,ic1),
-     &                            q(1,ic2),qb(1,ic2), 
+     &                            q(1,ic2),qb(1,ic2),
      &                            adt(ic1),adtb(ic1),
      &                            adt(ic2),adtb(ic2),
      &                            dum1,resb(1,ic1), dum2,resb(1,ic2))
@@ -224,6 +224,6 @@ c
             write(*,'(i5,e13.6,e23.16)') iter,rms,liftd
           endif
         enddo
-c 
+c
         stop
         end
diff --git a/air_lin.F b/air_lin.F
index e806b89..57d74b2 100644
--- a/air_lin.F
+++ b/air_lin.F
@@ -11,16 +11,17 @@ c                                                                   c
 ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
 c
         program air_lin
+        use print_active
         implicit none
 c
 #include "const.inc"
 c
         integer    maxnode,     maxcell,       maxedge
-        parameter (maxnode=9900,maxcell=9702+1,maxedge=19502)
+        parameter (maxnode=721801,maxcell=720000+1,maxedge=1441400)
 c
         integer*4 ecell(2,maxedge), boun(maxedge),
      &            edge(2,maxedge), cell(4,maxcell)
-        real*8    x(2,maxnode), xd(2,maxnode), 
+        real*8    x(2,maxnode), xd(2,maxnode),
      &            q(4,maxcell), qd(4,maxcell), qdold(4,maxcell),
      &            adt(maxcell), adtd(maxcell),
      &            resd(4,maxcell), resd2(4,maxcell)
@@ -29,6 +30,62 @@ c
      &            iter,niter,k, nnode,ncell,nedge
         real*8    liftd, rms, dum1(4), dum2(4), dalpha
 c
+c--------- NO STATEMENTS before this -----------------
+
+#if DEBUG
+c---------- DECLARE Variables to hold filenumbers.
+        integer*4 :: x_OAD_v_filenum,
+     &            x_OAD_d_filenum, q_OAD_v_filenum,
+     &            q_OAD_d_filenum, adt_OAD_v_filenum, adt_OAD_d_filenum,
+     &            res1_OAD_d_filenum, res1_OAD_v_filenum,
+     &            res2_OAD_d_filenum, res2_OAD_v_filenum,
+     &            lift_OAD_d_filenum, lift_OAD_v_filenum, tmp_v1, tmp_v2
+
+        character(len=10) :: filename
+
+c---------- SET filenum values
+        x_OAD_v_filenum = 11
+        x_OAD_d_filenum = 12
+        q_OAD_v_filenum = 13
+        q_OAD_d_filenum = 14
+        adt_OAD_v_filenum = 15
+        adt_OAD_d_filenum = 16
+        res1_OAD_v_filenum = 17
+        res1_OAD_d_filenum = 18
+        res2_OAD_v_filenum = 19
+        res2_OAD_d_filenum = 20
+        lift_OAD_v_filenum = 21
+        lift_OAD_d_filenum = 22
+c---------- END SET filenum values
+
+c--------- Create filename from filenumber
+c---------- OPEN files
+        write(filename, '(A6, I2)') "output", x_OAD_v_filenum
+        open(unit = x_OAD_v_filenum, file = filename)
+        write(filename, '(A6, I2)') "output", x_OAD_d_filenum
+        open(unit = x_OAD_d_filenum, file = filename)
+        write(filename, '(A6, I2)') "output", q_OAD_v_filenum
+        open(unit = q_OAD_v_filenum, file = filename)
+        write(filename, '(A6, I2)') "output", q_OAD_d_filenum
+        open(unit = q_OAD_d_filenum, file = filename)
+        write(filename, '(A6, I2)') "output", adt_OAD_v_filenum
+        open(unit = adt_OAD_v_filenum, file = filename)
+        write(filename, '(A6, I2)') "output", adt_OAD_d_filenum
+        open(unit = adt_OAD_d_filenum, file = filename)
+        write(filename, '(A6, I2)') "output", res1_OAD_v_filenum
+        open(unit = res1_OAD_v_filenum, file = filename)
+        write(filename, '(A6, I2)') "output", res1_OAD_d_filenum
+        open(unit = res1_OAD_d_filenum, file = filename)
+        write(filename, '(A6, I2)') "output", res2_OAD_v_filenum
+        open(unit = res2_OAD_v_filenum, file = filename)
+        write(filename, '(A6, I2)') "output", res2_OAD_d_filenum
+        open(unit = res2_OAD_d_filenum, file = filename)
+        write(filename, '(A6, I2)') "output", lift_OAD_v_filenum
+        open(unit = lift_OAD_v_filenum, file = filename)
+        write(filename, '(A6, I2)') "output", lift_OAD_d_filenum
+        open(unit = lift_OAD_d_filenum, file = filename)
+#endif
+
         do ipde = 1, 4
           dum1(ipde) = 0.0d0
           dum2(ipde) = 0.0d0
@@ -68,10 +125,43 @@ c
      &                      x(1,in4),xd(1,in4),
      &                      q(1,ic),qd(1,ic), adt(ic),adtd(ic))
         enddo
+
 c
         adt(ncell)  = 0.0d0
         adtd(ncell) = 0.0d0
 c
+
+#if DEBUG
+c--------- Write to files
+        tmp_v1 = 0
+        call write_array(adt, 1, tmp_v1,
+     &     adt_OAD_v_filenum)
+
+        tmp_v1 = 0
+        call write_array(adtd, 1, tmp_v1,
+     &     adt_OAD_d_filenum)
+
+        tmp_v1 = 0
+        tmp_v2 = 0
+        call write_array(x, 1, tmp_v1, 1, tmp_v2,
+     &     x_OAD_v_filenum)
+
+        tmp_v1 = 0
+        tmp_v2 = 0
+        call write_array(xd, 1, tmp_v1, 1, tmp_v2,
+     &     x_OAD_d_filenum)
+
+        tmp_v1 = 0
+        tmp_v2 = 0
+        call write_array(q, 1, tmp_v1, 1, tmp_v2,
+     &     q_OAD_v_filenum)
+
+        tmp_v1 = 0
+        tmp_v2 = 0
+        call write_array(qd, 1, tmp_v1, 1, tmp_v2,
+     &     q_OAD_d_filenum)
+#endif
+
         do ie = 1, nedge
           in1 = edge(1,ie)
           in2 = edge(2,ie)
@@ -82,7 +172,7 @@ c
             call flux_face_dx(x(1,in1),xd(1,in1),
      &                        x(1,in2),xd(1,in2),
      &                        q(1,ic1),qd(1,ic1),
-     &                        q(1,ic2),qd(1,ic2), 
+     &                        q(1,ic2),qd(1,ic2),
      &                        adt(ic1),adtd(ic1),
      &                        adt(ic2),adtd(ic2),
      &                        dum1,resd2(1,ic1), dum2,resd2(1,ic2))
@@ -92,6 +182,43 @@ c
      &                        q(1,ic2),qd(1,ic2), dum2,resd2(1,ic2))
           endif
         enddo
+
+#if DEBUG
+c--------- Write to files
+        tmp_v1 = 0
+        call write_array(adt, 1, tmp_v1,
+     &     adt_OAD_v_filenum)
+
+        tmp_v1 = 0
+        call write_array(adtd, 1, tmp_v1,
+     &     adt_OAD_d_filenum)
+
+        tmp_v1 = 0
+        tmp_v2 = 0
+        call write_array(resd2, 1, tmp_v1, 1, tmp_v2,
+     &     res2_OAD_d_filenum)
+
+        tmp_v1 = 0
+        tmp_v2 = 0
+        call write_array(x, 1, tmp_v1, 1, tmp_v2,
+     &     x_OAD_v_filenum)
+
+        tmp_v1 = 0
+        tmp_v2 = 0
+        call write_array(xd, 1, tmp_v1, 1, tmp_v2,
+     &     x_OAD_d_filenum)
+
+        tmp_v1 = 0
+        tmp_v2 = 0
+        call write_array(q, 1, tmp_v1, 1, tmp_v2,
+     &     q_OAD_v_filenum)
+
+        tmp_v1 = 0
+        tmp_v2 = 0
+        call write_array(qd, 1, tmp_v1, 1, tmp_v2,
+     &     q_OAD_d_filenum)
+#endif
+
 c
 c------ main time-marching loop
 c
@@ -106,7 +233,7 @@ c
               qdold(ipde,ic) = qd(ipde,ic)
             enddo
           enddo
-c 
+c
 c-------- predictor/corrector update loop
 c
           do k = 1, 2
@@ -127,10 +254,41 @@ c
      &                         q(1,ic),qd(1,ic), adt(ic),adtd(ic))
             enddo
 c
+#if DEBUG
+c--------- Write to files
+            tmp_v1 = 0
+            call write_array(adt, 1, tmp_v1,
+     &       adt_OAD_v_filenum)
+
+            tmp_v1 = 0
+            call write_array(adtd, 1, tmp_v1,
+     &      adt_OAD_d_filenum)
+
+            tmp_v1 = 0
+            tmp_v2 = 0
+            call write_array(x, 1, tmp_v1, 1, tmp_v2,
+     &       x_OAD_v_filenum)
+
+            tmp_v1 = 0
+            tmp_v2 = 0
+            call write_array(xd, 1, tmp_v1, 1, tmp_v2,
+     &       x_OAD_d_filenum)
+
+            tmp_v1 = 0
+            tmp_v2 = 0
+            call write_array(q, 1, tmp_v1, 1, tmp_v2,
+     &       q_OAD_v_filenum)
+
+            tmp_v1 = 0
+            tmp_v2 = 0
+            call write_array(qd, 1, tmp_v1, 1, tmp_v2,
+     &       q_OAD_d_filenum)
+#endif
+
             adt(ncell)  = 0.0d0
             adtd(ncell) = 0.0d0
-c 
-c---------- flux evaluation loop 
+c
+c---------- flux evaluation loop
 c
             do ie = 1, nedge
               in1 = edge(1,ie)
@@ -141,7 +299,7 @@ c
               if(boun(ie).eq.0) then
                 call flux_face_d(x(1,in1),x(1,in2),
      &                           q(1,ic1),qd(1,ic1),
-     &                           q(1,ic2),qd(1,ic2), 
+     &                           q(1,ic2),qd(1,ic2),
      &                           adt(ic1),adtd(ic1),
      &                           adt(ic2),adtd(ic2),
      &                           dum1,resd(1,ic1), dum2,resd(1,ic2))
@@ -150,10 +308,48 @@ c
      &                           q(1,ic2),qd(1,ic2), dum2,resd(1,ic2))
               endif
             enddo
+
+#if DEBUG
+c--------- Write to files
+          tmp_v1 = 0
+          call write_array(adt, 1, tmp_v1,
+     &     adt_OAD_v_filenum)
+
+          tmp_v1 = 0
+          call write_array(adtd, 1, tmp_v1,
+     &     adt_OAD_d_filenum)
+
+          tmp_v1 = 0
+          tmp_v2 = 0
+          call write_array(resd, 1, tmp_v1, 1, tmp_v2,
+     &     res1_OAD_d_filenum)
+
+          tmp_v1 = 0
+          tmp_v2 = 0
+          call write_array(x, 1, tmp_v1, 1, tmp_v2,
+     &     x_OAD_v_filenum)
+
+          tmp_v1 = 0
+          tmp_v2 = 0
+          call write_array(xd, 1, tmp_v1, 1, tmp_v2,
+     &     x_OAD_d_filenum)
+
+          tmp_v1 = 0
+          tmp_v2 = 0
+          call write_array(q, 1, tmp_v1, 1, tmp_v2,
+     &     q_OAD_v_filenum)
+
+          tmp_v1 = 0
+          tmp_v2 = 0
+          call write_array(qd, 1, tmp_v1, 1, tmp_v2,
+     &     q_OAD_d_filenum)
+#endif
+
 c
 c---------- flow field update
 c
             rms = 0.0d0
+
 c
             do ic = 1, ncell-1
               do ipde = 1, 4
@@ -162,9 +358,48 @@ c
                 rms = rms + resd(ipde,ic)**2
               enddo
             enddo
+
+#if DEBUG
+c--------- Write to files
+          tmp_v1 = 0
+          call write_array(adt, 1, tmp_v1,
+     &     adt_OAD_v_filenum)
+
+          tmp_v1 = 0
+          call write_array(adtd, 1, tmp_v1,
+     &     adt_OAD_d_filenum)
+
+          tmp_v1 = 0
+          tmp_v2 = 0
+          call write_array(resd, 1, tmp_v1, 1, tmp_v2,
+     &     res1_OAD_d_filenum)
+
+          tmp_v1 = 0
+          tmp_v2 = 0
+          call write_array(x, 1, tmp_v1, 1, tmp_v2,
+     &     x_OAD_v_filenum)
+
+          tmp_v1 = 0
+          tmp_v2 = 0
+          call write_array(xd, 1, tmp_v1, 1, tmp_v2,
+     &     x_OAD_d_filenum)
+
+          tmp_v1 = 0
+          tmp_v2 = 0
+          call write_array(q, 1, tmp_v1, 1, tmp_v2,
+     &     q_OAD_v_filenum)
+
+          tmp_v1 = 0
+          tmp_v2 = 0
+          call write_array(qd, 1, tmp_v1, 1, tmp_v2,
+     &     q_OAD_d_filenum)
+#endif
+
           enddo
 c
           rms = dsqrt(rms/ncell)
+c          print *, rms
+
 c
 c-------- print iteration history, including lift calculation
 c
@@ -185,6 +420,21 @@ c
             write(*,'(i5,e13.6,e23.16)') iter,rms,liftd
           endif
         enddo
-c 
+c
+
+#if DEBUG
+        close(x_OAD_v_filenum)
+        close(x_OAD_d_filenum)
+        close(q_OAD_v_filenum)
+        close(q_OAD_d_filenum)
+        close(adt_OAD_v_filenum)
+        close(adt_OAD_d_filenum)
+        close(res1_OAD_v_filenum)
+        close(res1_OAD_d_filenum)
+        close(res2_OAD_v_filenum)
+        close(res2_OAD_d_filenum)
+        close(lift_OAD_v_filenum)
+        close(lift_OAD_d_filenum)
+#endif
         stop
         end
diff --git a/airfoil.F b/airfoil.F
index b31a7a5..24a7f02 100644
--- a/airfoil.F
+++ b/airfoil.F
@@ -13,7 +13,7 @@ c
 #include "const.inc"
 c
         integer    maxnode,     maxcell,       maxedge
-        parameter (maxnode=9900,maxcell=9702+1,maxedge=19502)
+        parameter (maxnode=721801,maxcell=720000+1,maxedge=1441400)
 c
         integer*4 ecell(2,maxedge), boun(maxedge),
      &            edge(2,maxedge), cell(4,maxcell)
diff --git a/flow.dat b/flow.dat
index 6b4c324..95a3e20 100644
--- a/flow.dat
+++ b/flow.dat  
diff --git a/flow.dat.bak b/flow.dat.bak
new file mode 100644
index 0000000..6b4c324
--- /dev/null
+++ b/flow.dat.bak  
diff --git a/flux_face_b.f b/flux_face_b.f
new file mode 100644
index 0000000..1c2897e
--- /dev/null
+++ b/flux_face_b.f
diff --git a/flux_face_bx.f b/flux_face_bx.f
new file mode 100644
index 0000000..b4e1e0d
--- /dev/null
+++ b/flux_face_bx.f
diff --git a/flux_face_d.f b/flux_face_d.f
new file mode 100644
index 0000000..59385cf
--- /dev/null
+++ b/flux_face_d.f
diff --git a/flux_face_dx.f b/flux_face_dx.f
new file mode 100644
index 0000000..08761d7
--- /dev/null
+++ b/flux_face_dx.f
diff --git a/flux_wall_b.f b/flux_wall_b.f
new file mode 100644
index 0000000..2271f57
--- /dev/null
+++ b/flux_wall_b.f
diff --git a/flux_wall_bx.f b/flux_wall_bx.f
new file mode 100644
index 0000000..2c6ac20
--- /dev/null
+++ b/flux_wall_bx.f
diff --git a/flux_wall_d.f b/flux_wall_d.f
new file mode 100644
index 0000000..a73cf35
--- /dev/null
+++ b/flux_wall_d.f
diff --git a/flux_wall_dx.f b/flux_wall_dx.f
new file mode 100644
index 0000000..9b52266
--- /dev/null
+++ b/flux_wall_dx.f
diff --git a/grid.dat b/grid.dat
index 74832d2..b7e0b08 100644
--- a/grid.dat
+++ b/grid.dat
diff --git a/grid.dat.bak b/grid.dat.bak
new file mode 100644
index 0000000..74832d2
--- /dev/null
+++ b/grid.dat.bak
diff --git a/lift_wall_b.f b/lift_wall_b.f
new file mode 100644
index 0000000..c9f486f
--- /dev/null
+++ b/lift_wall_b.f
diff --git a/lift_wall_bx.f b/lift_wall_bx.f
new file mode 100644
index 0000000..1951c8c
--- /dev/null
+++ b/lift_wall_bx.f
diff --git a/lift_wall_d.f b/lift_wall_d.f
new file mode 100644
index 0000000..9dd0bdb
--- /dev/null
+++ b/lift_wall_d.f
diff --git a/lift_wall_dx.f b/lift_wall_dx.f
new file mode 100644
index 0000000..e5b5a58
--- /dev/null
+++ b/lift_wall_dx.f
diff --git a/print_active.F b/print_active.F
new file mode 100644
index 0000000..83b4255
--- /dev/null
+++ b/print_active.F
diff --git a/time_cell_b.f b/time_cell_b.f
new file mode 100644
index 0000000..d1c5191
--- /dev/null
+++ b/time_cell_b.f
diff --git a/time_cell_bx.f b/time_cell_bx.f
new file mode 100644
index 0000000..967d113
--- /dev/null
+++ b/time_cell_bx.f
diff --git a/time_cell_d.f b/time_cell_d.f
new file mode 100644
index 0000000..f181792
--- /dev/null
+++ b/time_cell_d.f
diff --git a/time_cell_dx.f b/time_cell_dx.f
new file mode 100644
index 0000000..d62a223
--- /dev/null
+++ b/time_cell_dx.f
diff --git a/w2f__types.f90 b/w2f__types.f90
new file mode 100644
index 0000000..d8b2821
--- /dev/null
+++ b/w2f__types.f90
